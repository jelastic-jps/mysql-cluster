type: update
id: mysql-master-slave-replication-cluster
name: MySQL/MariaDB/Percona Primary-Secondary Replication Database Cluster
description: 'DB Auto Clustering: 1 x Primary + N x Secondary'

baseUrl: https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/v3.0.0

success:
  text: /texts/phpmyadmin-credentials.md

targetNodes: none
nodeGroupAlias:
  ${settings.nodeGroup}: sqldb

mixins:
  - /scripts/common.yml

globals:
  DB_USER: ${settings.db_user:user-[fn.random]}
  DB_PASS: ${settings.db_pass:[fn.password(20)]}

onAfterScaleOut[sqldb]:
  - forEach(event.response.nodes):
    - setupSlave: ${@i.id}
    - addSlave: ${@i.id}

onAfterMigrate:
  - script: delete MANIFEST.id; return {result:0, jps:MANIFEST};
  - install: ${response.jps}
    settings:
      nodeGroup: ${settings.nodeGroup}

onAfterClone:
  - script: delete MANIFEST.id; return {result:0, jps:MANIFEST};
  - install: ${response.jps}
    envName: ${event.response.env.envName}
    settings:
      nodeGroup: ${settings.nodeGroup}

onInstall:
  - getReplicaUser
  - forEach(i:nodes.sqldb):
    - if (${@i.ismaster}):
        setupMaster: ${@i.id}
    - else:
        setupSlave: ${@i.id}
  - forEach(i:nodes.sqldb):
    - if (!${@i.ismaster}):
        addSlave: ${@i.id}

actions:
  setupMaster:
    - cmd[${this}]: |-
        wget ${baseUrl}/configs/master.cnf -O /etc/mysql/conf.d/master.cnf &>> /var/log/run.log
        sed -i "s/server-id.*/server-id = ${this}/" /etc/mysql/conf.d/master.cnf
        sed -i "s/report_host.*/report_host = node${this}/" /etc/mysql/conf.d/master.cnf
        sed -i "/auto-increment/d" /etc/mysql/conf.d/master.cnf
    - if (!${settings.clone:false}):
      - setupUsers:
          id: ${this}
    - setNodeDisplayName[${this}]: Primary

  setupSlave:
    - cmd[${this}]: |-
        wget ${baseUrl}/configs/slave.cnf -O /etc/mysql/conf.d/slave.cnf &>> /var/log/run.log
        sed -i "s/server-id.*/server-id = ${this}/" /etc/mysql/conf.d/slave.cnf
        sed -i "s/report_host.*/report_host = node${this}/" /etc/mysql/conf.d/slave.cnf
    - setNodeDisplayName[${this}]: Secondary
    
  addSlave:
    - env.control.GetContainerEnvVarsByGroup[sqldb]
    - setGlobals:
        PRIMARY_IP: ${response.object.PRIMARY_IP}
    - if (/response/.test("${globals.PRIMARY_IP}")):
      - setGlobals:
          PRIMARY_IP: ${nodes.sqldb.master.address}
    - cmd[${this}]: |-
        curl --silent https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/stage-addon/addons/recovery/scripts/db-recovery.sh > /tmp/db-recovery.sh; 
        bash /tmp/db-recovery.sh --scenario restore_secondary_from_primary --donor-ip ${globals.PRIMARY_IP};
      user: root
