globals:
  db_cluster_path: https://cdn.jsdelivr.net/gh/jelastic-jps/mysql-cluster@3.0.0
  proxy_web_port: 4848

actions:
  
  setReplicaCommands:
    - if ((/mariadb/.test("${nodes.sqldb.nodeType}")) && ('${fn.compare([nodes.sqldb.version], 11.0)}' >= 0)):
        setGlobals:
          show_slave_hosts: "SHOW REPLICA HOSTS"
    - elif ((/mysql/.test("${nodes.sqldb.nodeType}")) && ('${fn.compare([nodes.sqldb.version], 8.1)}' >= 0)):
        setGlobals:
          show_slave_hosts: "SHOW REPLICAS"
    - elif ((/percona/.test("${nodes.sqldb.nodeType}")) && ('${fn.compare([nodes.sqldb.version], 8.1)}' >= 0)):
        setGlobals:
          show_slave_hosts: "SHOW REPLICAS"
    - else:
        setGlobals:
          show_slave_hosts: "SHOW SLAVE HOSTS"

  disableOrchestrator:
    - log: Disabling orchestrator
    - cmd [proxy]: |-
        mysql -h 127.0.0.1 -P3360 -uroot -e "DROP DATABASE IF EXISTS orchestrator;"
        if systemctl list-unit-files --type=service | grep -q 'orchestrator.service'; then
          systemctl stop orchestrator;
          systemctl disable orchestrator;
        fi
      user: root

  setupProxySQLGUI:
    - log: ProxySQL GUI configuration
    - cmd[proxy]: |-
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "UPDATE global_variables SET variable_value='true' WHERE variable_name='admin-web_enabled';"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "UPDATE global_variables SET variable_value='${globals.proxy_web_port}' WHERE variable_name='admin-web_port';"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "UPDATE global_variables SET variable_value='${globals.ADMIN_USER}:${globals.ADMIN_PASS}' WHERE variable_name='admin-stats_credentials';"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "LOAD ADMIN VARIABLES TO RUNTIME; SAVE ADMIN VARIABLES TO DISK;"
    - script[proxy]: ${globals.db_cluster_path}/scripts/firewallRules.js?_r=${fn.random}
      ports: ${globals.proxy_web_port}
      name: ProxySQL Admin Web 
  
  setupOrchestrator:
    - log: Orchestrator configuration
    - cmd [proxy]: |-
        mysql -h 127.0.0.1 -P3360 -uroot -e "DROP DATABASE IF EXISTS orchestrator;"
        mysql -h 127.0.0.1 -P3360 -uroot -e "CREATE DATABASE IF NOT EXISTS orchestrator;"
        major_version=$(rpm -qi mysql-community-server | grep Version | awk '{print $3}' | awk -F'.' '{print $1}');
        if [ $major_version -ge 8 ]; then
          mysql -h 127.0.0.1 -P3360 -uroot -e "ALTER USER 'admin'@'127.0.0.1' IDENTIFIED BY '${globals.ORCH_PASS}';"
        else
          mysql -h 127.0.0.1 -P3360 -uroot -e "SET PASSWORD FOR 'admin'@'127.0.0.1' = PASSWORD('${globals.ORCH_PASS}');"
        fi
        mysql -h 127.0.0.1 -P3360 -uroot -e "FLUSH PRIVILEGES;"
        wget ${globals.db_cluster_path}/configs/orchestrator.conf.json -O /etc/orchestrator.conf.json &>> /var/log/run.log
        sed -i -e 's|orc_client_user|${globals.DB_USER}|g' /etc/orchestrator.conf.json
        sed -i -e 's|orc_client_password|${globals.DB_PASS}|g' /etc/orchestrator.conf.json
        sed -i -e 's|orc_server_user|admin|g' /etc/orchestrator.conf.json
        sed -i -e 's|orc_server_password|${globals.ORCH_PASS}|g' /etc/orchestrator.conf.json
        sed -i -e 's|HTTP_Auth_User|admin|g' /etc/orchestrator.conf.json
        sed -i -e 's|HTTP_Auth_Password|${globals.ORCH_PASS}|g' /etc/orchestrator.conf.json
        systemctl restart orchestrator
      user: root

  setupProxySQLCluster:
    - log: ProxySQL clusterization
    - cmd [proxy]: |-
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "UPDATE global_variables SET variable_value='admin:admin;${globals.ADMIN_USER}:${globals.ADMIN_PASS}' WHERE variable_name='admin-admin_credentials';"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "UPDATE global_variables SET variable_value='0.0.0.0:6032' WHERE variable_name='admin-mysql_ifaces';"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "UPDATE global_variables SET variable_value='${globals.ADMIN_USER}' WHERE variable_name='admin-cluster_username';"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "UPDATE global_variables SET variable_value='${globals.ADMIN_PASS}' WHERE variable_name='admin-cluster_password';"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "UPDATE global_variables SET variable_value=200 WHERE variable_name='admin-cluster_check_interval_ms';"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "UPDATE global_variables SET variable_value=100 WHERE variable_name='admin-cluster_check_status_frequency';"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "UPDATE global_variables SET variable_value='true' WHERE variable_name='admin-cluster_mysql_servers_save_to_disk';"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "UPDATE global_variables SET variable_value='false' WHERE variable_name='admin-hash_passwords';"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "UPDATE global_variables SET variable_value=1 WHERE variable_name='admin-cluster_mysql_servers_diffs_before_sync';"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "load admin variables to RUNTIME; save admin variables to disk;"
    - forEach(n:nodes.proxy):
      - cmd [proxy]: |-
          MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "INSERT INTO proxysql_servers (hostname,port,weight,comment) VALUES ('${@n.address}',6032,100,'CLUSTER');"
          MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "LOAD PROXYSQL SERVERS TO RUNTIME; SAVE PROXYSQL SERVERS TO DISK;"
          
  resetProxyNodes:
    - log: Reset ProxySQL configuration
    - cmd[proxy]: |-
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "DELETE FROM proxysql_servers; LOAD PROXYSQL SERVERS TO RUNTIME; SAVE PROXYSQL SERVERS TO DISK;"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "DELETE FROM mysql_replication_hostgroups; LOAD MYSQL SERVERS TO RUNTIME; SAVE MYSQL SERVERS TO DISK;"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "DELETE FROM mysql_galera_hostgroups; LOAD MYSQL SERVERS TO RUNTIME; SAVE MYSQL SERVERS TO DISK;"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "DELETE FROM mysql_users; LOAD MYSQL USERS TO RUNTIME; SAVE MYSQL USERS TO DISK;"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "DELETE FROM mysql_servers; LOAD MYSQL SERVERS TO RUNTIME; SAVE MYSQL SERVERS TO DISK;"
        MYSQL_PWD=admin mysql -h 127.0.0.1 -P6032 -uadmin -e "DELETE FROM scheduler; LOAD SCHEDULER TO RUNTIME; SAVE SCHEDULER TO DISK;"
        mysql -h 127.0.0.1 -P3360 -uroot -e "DROP DATABASE IF EXISTS orchestrator;"
        sudo service proxysql restart;
